# Docker Compose配置文件
# 用于统一管理BEM项目的前后端服务

services:
  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bem-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      # Supabase配置（从环境变量读取）
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      # JWT配置
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      # 其他配置
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend,http://frontend:80,http://bem-frontend,http://bem-frontend:80,http://47.106.198.192,http://47.106.198.192:80,*
    volumes:
      # 挂载日志目录（可选）
      - ./backend/logs:/app/logs
    networks:
      - bem-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bem-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      # API基础URL指向后端服务 - 生产环境使用公网IP
      - VITE_API_BASE_URL=http://47.106.198.192:5000/api
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - bem-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# 网络配置
networks:
  bem-network:
    driver: bridge
    name: bem-network

# 数据卷配置（如果需要持久化数据）
volumes:
  backend-logs:
    driver: local